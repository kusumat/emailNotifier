<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="kony" basedir="." default="main" xmlns:ivy="antlib:org.apache.ivy.ant">
    <property name="ivy.install.version" value="2.4.0"/>
    <property name="ivy.home" value="${ant.library.dir}"/>
    <property name="ivy.jar.file" value="${ivy.home}/ivy.jar"/>

    <available classname="org.apache.ivy.Main" property="ivy.installed"/>

    <target name="main"
            depends="init,init-ivy,clean,retrieve,plugins,property,cloudpropertyOverwriteOnExist"
            description="-> generate properties, cloudpropertyOverwriteOnExist, generate ivy.xml, retrieve artifacts, delete duplicates"/>

    <target name="download-ivy" unless="ivy.installed">
        <get src="http://search.maven.org/remotecontent?filepath=org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar"
             dest="${ivy.jar.file}"
             usetimestamp="true"/>
    </target>

    <target name="init-ivy" depends="download-ivy">
        <path id="ivy.lib.path">
            <fileset dir="${ivy.home}" includes="*.jar"/>
        </path>
        <taskdef resource="org/apache/ivy/ant/antlib.xml"
                 uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
    </target>

    <target name="init" description="-> properties initialization">
        <property environment="env"/>
        <!-- Set of properties that depend on chosen target platform -->
        <condition property="separator" value="\" else="/">
            <os family="windows"/>
        </condition>
        <condition property="androidMobileNative" value="${env.ANDROID_MOBILE_NATIVE}" else="false">
            <isset property="env.ANDROID_MOBILE_NATIVE"/>
        </condition>
        <condition property="androidMobileSPA" value="${env.ANDROID_MOBILE_SPA}" else="false">
            <isset property="env.ANDROID_MOBILE_SPA"/>
        </condition>
        <condition property="androidTabletNative" value="${env.ANDROID_TABLET_NATIVE}" else="false">
            <isset property="env.ANDROID_TABLET_NATIVE"/>
        </condition>
        <condition property="androidTabletSPA" value="${env.ANDROID_TABLET_SPA}" else="false">
            <isset property="env.ANDROID_TABLET_SPA"/>
        </condition>
        <!-- APPFACT-2049: Following flag is used to set the generateAppBundle flag value in androidbuild.properties. In future this condition property may be modified or removed once ci-build supports AAB generation -->
        <condition property="androidAppBundle" value="${env.ANDROID_APP_BUNDLE}" else="false">
            <isset property="env.ANDROID_APP_BUNDLE"/>
        </condition>
        <!-- APPFACT-2060: Following flags are used to set the support32bit and splitapks flag values in androidbuild.properties file. -->
        <condition property="support32BitDevices" value="${env.SUPPORT_32BIT_DEVICES}" else="false">
            <isset property="env.SUPPORT_32BIT_DEVICES"/>
        </condition>
        <condition property="supportAndroidX86Arch" value="${env.SUPPORT_x86_DEVICES}" else="false">
            <isset property="env.SUPPORT_x86_DEVICES"/>
        </condition>
        <condition property="splitApks" value="true" else="false">
            <or>
                <equals arg1="${support32BitDevices}" arg2="true"/>
                <equals arg1="${supportAndroidX86Arch}" arg2="true"/>
            </or>
        </condition>
        <condition property="iosWatchNative" value="${env.APPLE_WATCH_EXTENSION}" else="false">
            <isset property="env.APPLE_WATCH_EXTENSION"/>
        </condition>
        <condition property="iosMobileNative" value="${env.IOS_MOBILE_NATIVE}" else="false">
            <isset property="env.IOS_MOBILE_NATIVE"/>
        </condition>
        <condition property="iosMobileSPA" value="${env.IOS_MOBILE_SPA}" else="false">
            <isset property="env.IOS_MOBILE_SPA"/>
        </condition>
        <condition property="iosTabletNative" value="${env.IOS_TABLET_NATIVE}" else="false">
            <isset property="env.IOS_TABLET_NATIVE"/>
        </condition>
        <condition property="iosTabletSPA" value="${env.IOS_TABLET_SPA}" else="false">
            <isset property="env.IOS_TABLET_SPA"/>
        </condition>
        <!-- Window Phone 8 is not supported by Microsoft anymore, ignoring this channel -->
        <condition property="windowsMobileWindowsPhone8" value="${env.WINDOWS8_MOBILE_NATIVE}" else="false">
            <isset property="env.WINDOWS8_MOBILE_NATIVE"/>
        </condition>
        <condition property="windowsMobileWindowsPhone81S" value="${env.WINDOWS81_MOBILE_NATIVE}" else="false">
            <isset property="env.WINDOWS81_MOBILE_NATIVE"/>
        </condition>
        <condition property="windowsMobileWindowsPhone10" value="${env.WINDOWS10_MOBILE_NATIVE}" else="false">
            <isset property="env.WINDOWS10_MOBILE_NATIVE"/>
        </condition>
        <condition property="windowsMobileSPA" value="${env.WINDOWS_MOBILE_SPA}" else="false">
            <isset property="env.WINDOWS_MOBILE_SPA"/>
        </condition>
        <condition property="windowsTabletWindows81" value="${env.WINDOWS81_TABLET_NATIVE}" else="false">
            <isset property="env.WINDOWS81_TABLET_NATIVE"/>
        </condition>
        <condition property="windowsTabletWindows10" value="${env.WINDOWS10_TABLET_NATIVE}" else="false">
            <isset property="env.WINDOWS10_TABLET_NATIVE"/>
        </condition>
        <condition property="windowsTabletSPA" value="${env.WINDOWS_TABLET_SPA}" else="false">
            <isset property="env.WINDOWS_TABLET_SPA"/>
        </condition>
        <condition property="windowsDesktopKiosk" value="${env.WINDOWS_DESKTOP_KIOSK}" else="false">
            <isset property="env.WINDOWS_DESKTOP_KIOSK"/>
        </condition>
        <condition property="windowsDesktopKiosk" value="${env.WINDOWS_DESKTOP_WEB}" else="false">
            <isset property="env.WINDOWS_DESKTOP_WEB"/>
        </condition>
        <condition property="desktopWeb" value="${env.DESKTOP_WEB}" else="false">
            <isset property="env.DESKTOP_WEB"/>
        </condition>
        <condition property="blackberryMobileSPA" value="${env.BLACKBERRY_MOBILE_SPA}" else="false">
            <isset property="env.BLACKBERRY_MOBILE_SPA"/>
        </condition>
        <condition property="blackberryMobileHybridSPA" value="${env.BLACKBERRY_MOBILE_HYBRID_SPA}" else="false">
            <isset property="env.BLACKBERRY_MOBILE_HYBRID_SPA"/>
        </condition>
    	
        <!-- Set of Test properties -->
        <condition property="jasmineTestsUrl" value="${env.JASMINE_TEST_URL}" else="">
            <isset property="env.JASMINE_TEST_URL"/>
        </condition>

        <condition property="enableJasmineAutomation" value="${env.ENABLE_JASMINE_AUTOMATION}" else="false">
            <isset property="env.ENABLE_JASMINE_AUTOMATION"/>
        </condition>
    	
        <condition property="fetchJasmineTestsFromLocal" value="true" else="false">
            <and>
                <isset property="env.TEST_FRAMEWORK"/>
                <equals arg1="${env.TEST_FRAMEWORK}" arg2="jasmine" casesensitive="false" />
            </and>
        </condition>

        <!-- Set of common properties -->
        <condition property="projectName" value="${env.PROJECT_NAME}" else="">
            <isset property="env.PROJECT_NAME"/>
        </condition>
        <condition property="projectAppId" value="${env.projectAppId}" else="">
            <isset property="env.projectAppId"/>
        </condition>
        <condition property="androidHome" value="${env.ANDROID_HOME}" else="">
            <isset property="env.ANDROID_HOME"/>
        </condition>
        <condition property="workspace" value="${env.PROJECT_WORKSPACE}" else="">
            <isset property="env.WORKSPACE"/>
        </condition>
        <condition property="buildMode" value="release" else="${env.BUILD_MODE}">
            <and>
                <isset property="env.BUILD_MODE" />
                <or>
                    <equals arg1="${env.BUILD_MODE}" arg2="release-protected" />
                    <equals arg1="${env.BUILD_MODE}" arg2="release-protected [native-only]" />
                </or>
            </and>
        </condition>
        <condition property="appVersion" value="${env.APP_VERSION}" else="">
            <isset property="env.APP_VERSION"/>
        </condition>
        <condition property="defaultLocale" value="${env.DEFAULT_LOCALE}" else="">
            <isset property="env.DEFAULT_LOCALE"/>
        </condition>
        <condition property="androidPackageName" value="${env.ANDROID_PACKAGE_NAME}" else="">
            <isset property="env.ANDROID_PACKAGE_NAME"/>
        </condition>
        <condition property="androidVersionCode" value="${env.ANDROID_VERSION_CODE}" else="">
            <isset property="env.ANDROID_VERSION_CODE"/>
        </condition>
        <condition property="iosBundleVersion" value="${env.IOS_BUNDLE_VERSION}" else="">
            <isset property="env.IOS_BUNDLE_VERSION"/>
        </condition>
        <condition property="iosBundleId" value="${env.IOS_BUNDLE_ID}" else="">
            <isset property="env.IOS_BUNDLE_ID"/>
        </condition>
        <condition property="androidBundleId" value="${env.ANDROID_PACKAGE_NAME}" else="">
            <isset property="env.ANDROID_PACKAGE_NAME"/>
        </condition>
        <condition property="cloudUsername" value="${env.CLOUD_USERNAME}" else="">
            <and>
                <isset property="env.CLOUD_USERNAME"/>
                <not> <equals arg1="${env.CLOUD_USERNAME}" arg2="dummyuser" /> </not>
            </and>
        </condition>
        <condition property="cloudPassword" value="${env.CLOUD_PASSWORD}" else="">
            <and>
                <isset property="env.CLOUD_PASSWORD"/>
                <not> <equals arg1="${env.CLOUD_PASSWORD}" arg2="dummypasswd" /> </not>
            </and>
        </condition>
        <condition property="fabricAccountId" value="${env.FABRIC_ACCOUNT_ID}" else="${env.CLOUD_ACCOUNT_ID}">
            <isset property="env.FABRIC_ACCOUNT_ID"/>
        </condition>
        <condition property="domainParam" value="${env.domainParam}" else="">
            <isset property="env.domainParam"/>
        </condition>
    	<condition property="fabricUrl" value="${env.CONSOLE_URL}" else="https://manage.kony.com">
    	    <isset property="env.CONSOLE_URL"/>
    	</condition>
        <condition property="fabricEnvironmentName" value="${env.FABRIC_ENV_NAME}" else="">
            <isset property="env.FABRIC_ENV_NAME"/>
        </condition>
        <condition property="fabricAppName" value="${env.FABRIC_APP_NAME}" else="">
            <isset property="env.FABRIC_APP_NAME"/>
        </condition>
        <condition property="fabricAppVersion" value="${env.FABRIC_APP_VERSION}" else="1.0">
            <isset property="env.FABRIC_APP_VERSION"/>
        </condition>
        <!-- Set of Universal application build properties -->
        <condition property="universalAndroid" value="${env.ANDROID_UNIVERSAL_NATIVE}" else="false">
            <isset property="env.ANDROID_UNIVERSAL_NATIVE"/>
        </condition>
        <condition property="universalIos" value="${env.IOS_UNIVERSAL_NATIVE}" else="false">
            <isset property="env.IOS_UNIVERSAL_NATIVE"/>
        </condition>
        <condition property="binaryextensionWEB" value="war" else="zip">
            <equals arg1="${env.FORCE_WEB_APP_BUILD_COMPATIBILITY_MODE}" arg2="true"/>
        </condition>
        <condition property="webProtectionPreset" value="${env.PROTECTION_LEVEL}" else="">
            <isset property="env.PROTECTION_LEVEL"/>
        </condition>
        <condition property="webProtectionExcludeListFile" value="${env.EXCLUDE_LIST_PATH}" else="">
            <isset property="env.EXCLUDE_LIST_PATH"/>
        </condition>
        <condition property="webProtectionBlueprintFile" value="${env.CUSTOM_PROTECTION_PATH}" else="">
            <isset property="env.CUSTOM_PROTECTION_PATH"/>
        </condition>

        <!-- set of protected build properties -->
        <condition property="protectedIosBuild" value="true" else="false">
            <and>
                <equals arg1="${env.BUILD_MODE}" arg2="release-protected" />
                <or>
                    <equals arg1="${iosMobileNative}" arg2="true" />
                    <equals arg1="${iosTabletNative}" arg2="true" />
                    <equals arg1="${universalIos}" arg2="true" />
                </or>
            </and>
        </condition>
        <condition property="protectedAndroidBuild" value="true" else="false">
            <and>
                <equals arg1="${env.BUILD_MODE}" arg2="release-protected" />
                <or>
                    <equals arg1="${androidMobileNative}" arg2="true" />
                    <equals arg1="${androidTabletNative}" arg2="true" />
                    <equals arg1="${universalAndroid}" arg2="true" />
                </or>
            </and>
        </condition>

        <condition property="protectedWebBuild" value="true" else="false">
            <equals arg1="${env.WEB_PROTECTION}" arg2="true" />
        </condition>

        <condition property="webProtectedModePropertiesPath" value ="${env.WEB_PROTECTEDMODE_PROPERTIES_PATH}" else="">
                <isset property="env.WEB_PROTECTEDMODE_PROPERTIES_PATH"/>
        </condition>

        <condition property="webEncryptionDirsPath" value ="${env.WEB_ENCRYPTION_DIRS}" else="">
            <isset property="env.WEB_ENCRYPTION_DIRS"/>
        </condition>
        <!-- Following flag is used to execute 'update-androidbuild-properties-file' target if any of the android channel is selected -->
        <condition property="is-androidChannel-selected" value="true" else="false">
            <or>
                <equals arg1="${androidMobileNative}" arg2="true" />
                <equals arg1="${androidTabletNative}" arg2="true" />
                <equals arg1="${universalAndroid}" arg2="true" />
            </or>
        </condition>
        <property name="pluginDir" value="${workspace}${separator}kony-plugins"/>
    </target>

    <target name="property" depends="init,update-androidbuild-properties-file" description="-> prepare property files">
        <propertyfile file="HeadlessBuild.properties" comment="Autogenerated file">
            <!-- CI build tools path entries -->
            <entry key="androidHome" value="${androidHome}"/>
            <entry key="javaloc" value="${env.JAVA_HOME}"/>
            <entry key="plugin.dir" value="${pluginDir}"/>

            <entry key="project.name" value="${env.VISUALIZER_PROJECT_ROOT_FOLDER_NAME}"/>
            <!-- Mode been hardcoded to 0 to fit requirement of publishing Fabric application with Fabric CLI -->
            <entry key="mode" value="0"/>
            <entry key="build.mode" value="${buildMode}"/>
            <entry key="appid" value="${projectAppId}"/>
            <entry key="version" value="${appVersion}"/>
            <entry key="default_locale" value="${defaultLocale}"/>
            <entry key="android.packagename" value="${androidPackageName}"/>
            <entry key="android.versioncode" value="${androidVersionCode}"/>
            <entry key="ios.bundleversion" value="${iosBundleVersion}"/>
            <entry key="iphonebundleidentifierkey" value="${iosBundleId}"/>
            <entry key="android.packagename" value="${androidBundleId}"/>
            <entry key="cloud.username" value="${cloudUsername}"/>
            <!--APPFACT-545, direct assignment leads in adding escape character '\' with all special characters.
                Instead using replace task to add proper value of password -->
            <entry key="cloud.password" value="CLOUD_PASSWORD"/>
            <entry key="account.id" value="${fabricAccountId}"/>
            <entry key="cloud.environment" value="${domainParam}"/>
            <entry key="mobilefabric.url" value="${fabricUrl}"/>
            <entry key="environment.name" value="${fabricEnvironmentName}"/>
            <entry key="mf.appname" value="${fabricAppName}"/>
            <entry key="mf.app.version" value="${fabricAppVersion}"/>
            <entry key="iphone" value="${iosMobileNative}"/>
            <entry key="android" value="${androidMobileNative}"/>
            <entry key="windowsphone8" value="${windowsMobileWindowsPhone8}"/>
            <entry key="windowsphone81s" value="${windowsMobileWindowsPhone81S}"/>
            <entry key="windowsphone10" value="${windowsMobileWindowsPhone10}"/>
            <entry key="spa.iphone" value="${iosMobileSPA}"/>
            <entry key="spa.android" value="${androidMobileSPA}"/>
            <entry key="spa.blackberry" value="${blackberryMobileSPA}"/>
            <entry key="spa.winphone" value="${windowsMobileSPA}"/>
            <entry key="spa.hybrid.blackberry" value="${blackberryMobileHybridSPA}"/>
            <entry key="ipad" value="${iosTabletNative}"/>
            <entry key="androidtablet" value="${androidTabletNative}"/>
            <entry key="windows8.1" value="${windowsTabletWindows81}"/>
            <entry key="windows10" value="${windowsTabletWindows10}"/>
            <entry key="spa.ipad" value="${iosTabletSPA}"/>
            <entry key="spa.androidtablet" value="${androidTabletSPA}"/>
            <entry key="spa.windowstablet" value="${windowsTabletSPA}"/>
            <entry key="desktop_kiosk" value="${windowsDesktopKiosk}"/>
            <entry key="desktopweb" value="${desktopWeb}"/>
            <entry key="iphonewatch" value="${iosWatchNative}"/>
            <entry key="mac.ipaddress" value=""/>
            <entry key="mac.username" value=""/>
            <entry key="mac.password" value=""/>
            <entry key="keychain.password" value=""/>
            <entry key="development.team" value=""/>
            <entry key="method" value=""/>
            <entry key="genipaiphone" value="false"/>
            <entry key="genipaipad" value="false"/>
            <entry key="binaries.location" value=""/>
            <entry key="combinewar.middlewarearchive" value=""/>
            <entry key="combinewar.context" value=""/>
            <entry key="combinewar.war" value="false"/>
            <entry key="combinewar.ear" value="false"/>
            <entry key="combinewar.dependencylibraries" value=""/>
            <!-- Universal application properties -->
            <entry key="universal.android" value="${universalAndroid}"/>
            <entry key="universal.iphone" value="${universalIos}"/>
            <!-- Protected build mode options -->
            <entry key="protectedmodeenabled.ios" value="${protectedIosBuild}"/>
            <entry key="protectedmodeenabled.android" value="${protectedAndroidBuild}"/>
            <entry key="protectedmodeenabled.web" value="${protectedWebBuild}"/>
            <entry key="web.protection.preset" value="${webProtectionPreset}"/>
            <entry key="web.protection.excludelist" value="${webProtectionExcludeListFile}"/>
            <entry key="web.protection.custom.blueprint" value="${webProtectionBlueprintFile}"/>
            <entry key="web.protectedmode.properties" value="${webProtectedModePropertiesPath}"/>
            <entry key="web.encryption.dirs" value="${webEncryptionDirsPath}"/>
            <!-- Web Channel options -->
            <entry key="web.binary.extension" value="${binaryextensionWEB}"/>
        	<!-- Jasmine Test options -->
        	<entry key="test.automation.server.url" value="${jasmineTestsUrl}"/>
        	<entry key="test.automation.storage.local" value="${fetchJasmineTestsFromLocal}"/>
              <entry key="enableJasmineAutomation" value="${enableJasmineAutomation}"/>
        </propertyfile>

        <!--APPFACT-545: propertyfile appends escape character to Special Characters, workaround to use exact same password -->
        <replace file="HeadlessBuild.properties" token="CLOUD_PASSWORD" value="${cloudPassword}" />
    </target>

    <!--APPFACT-2049: workaround for manually setting the generateAppBundle flag with the appfactory ANDROID_APP_BUNDLE value, this should be removed once the ci supports AAB generation  -->
    <!-- and -->
    <!--APPFACT-2060: setting the splitapks and support32bit flags with the appfactory SUPPORT_32BIT_DEVICES value and,this will decide the generating the combination of '32bit and 64bit apks' with 'ARM and x86 architecture' -->
    <target name="update-androidbuild-properties-file" if="${is-androidChannel-selected}">
        <propertyfile file="androidbuild.properties">
            <entry key="generateAppBundle" value="${androidAppBundle}"/>
            <entry key="splitapks" value="${splitApks}"/>
            <entry key="support32bit" value="${support32BitDevices}"/>
            <entry key="support64bit" value="true"/>
        </propertyfile>
    </target>

    <target name="cloudpropertyOverwriteOnExist" if="${env.IS_STARTER_PROJECT}" description="-> update properties coming from CloudBuild service">
        <condition property="fabricToken" value="${env.MF_TOKEN}" else="">
            <isset property="env.MF_TOKEN"/>
        </condition>

        <propertyfile file="HeadlessBuild.properties">
            <entry key="fabric.token" value="${fabricToken}"/>
        </propertyfile>
    </target>

    <target name="generateIvyFromFeatureXML" description="-> generate ivy.xml from feature.xml" if="${env.IS_STARTER_PROJECT}">
        <condition property="plugin.os.ver" value="mac64" else="win64">
            <os family="mac"/>
        </condition>
        <copy file="feature.xml" tofile="ivy.xml" overwrite="true"/>

        <!-- Replace the old property names with new one -->
        <replaceregexp file="ivy.xml" match="&lt;\?xml.*\?&gt;" replace="" byline="true"/>
        <replace file="ivy.xml" token="plugin" value="dependency"/>
        <replace file="ivy.xml" token="id=" value="name="/>
        <replace file="ivy.xml" token="version=" value="rev="/>
        <replaceregexp  file="ivy.xml"  match="&lt;feature(.+?)&gt;" replace='&lt;ivy-module version=\"2.4\"&gt; &lt;info organisation=\"com.kony\" module=\"AppFactory\"/&gt;&#10;&lt;dependencies&gt;' flags="s"/>
        <replace file="ivy.xml">
            <replacetoken><![CDATA[</feature>]]></replacetoken>
            <replacevalue><![CDATA[</dependencies>]]>&#10;<![CDATA[</ivy-module>]]>
            </replacevalue>
        </replace>
        <replace file="ivy.xml" token="win64" value="${plugin.os.ver}"/>
        <replace file="ivy.xml" token="mac64" value="${plugin.os.ver}"/>

        <!-- Remove the unwanted tags from feature.xml -->
        <replaceregexp file="ivy.xml" match="&lt;description(.*)description&gt;" replace="" flags="gs"/>
        <replaceregexp file="ivy.xml" match="&lt;copyright(.*)copyright&gt;" replace="" flags="gs"/>
        <replaceregexp file="ivy.xml" match="&lt;license(.*)license&gt;" replace="" flags="gs"/>
        <replaceregexp file="ivy.xml" match="&lt;url(.*)url&gt;" replace="" flags="gs"/>
        <replaceregexp file="ivy.xml" match=" unpack=&quot;(.*)&quot;" replace="" flags="gm"/>
        <!-- Remove unwanted plugin entries from ivy.xml -->
        <replaceregexp file="ivy.xml" match="&lt;dependency(.*)name=&quot;(.*)(branding|viz\.api|viz\.chrome|viz\.nodejs|codegen|license|soapui|fpreview|studio\.cloud|viz\.ide)(.*)&quot;(.*)&gt;" replace="" flags="gm"/>

        <!-- Remove empty lines and format ivy.xml -->
        <replaceregexp file="ivy.xml" match="(\r?\n)\s*\r?\n" flags="g" replace="\1" />
    </target>


    <target name="plugins" description="-> generate ivy.xml from konyplugins.xml" unless="${env.IS_STARTER_PROJECT}">
        <condition property="plugin.os.ver" value="mac64" else="win64">
            <os family="mac"/>
        </condition>
        <copy file="konyplugins.xml" tofile="ivy.xml" overwrite="true"/>
        <replace file="ivy.xml">
            <replacetoken><![CDATA[<plugins>]]></replacetoken>
            <replacevalue><![CDATA[<ivy-module version="2.4">
    <info organisation="com.kony" module="AppFactory"/>
    <dependencies>]]></replacevalue>
        </replace>
        <replace file="ivy.xml" token="pluginInfo" value="dependency"/>
        <replace file="ivy.xml" token="plugin-id" value="name"/>
        <replace file="ivy.xml" token="version-no" value="rev"/>
        <replaceregexp file="ivy.xml" match="plugin-name.*$" replace="/>" flags="gm"/>
        <replace file="ivy.xml">
            <replacetoken><![CDATA[</plugins>]]></replacetoken>
            <replacevalue><![CDATA[    </dependencies>
</ivy-module>]]></replacevalue>
        </replace>
        <replace file="ivy.xml" token="win64" value="${plugin.os.ver}"/>
        <replace file="ivy.xml" token="mac64" value="${plugin.os.ver}"/>
        <!-- Remove unwanted plugin entries from ivy.xml -->
        <replaceregexp file="ivy.xml" match="&lt;dependency(.*)name=&quot;(.*)(branding|viz\.api|viz\.chrome|viz\.nodejs|codegen|license|soapui|fpreview|architecture|studio\.cloud|viz\.ide)(.*)&quot;(.*)&gt;" replace="" flags="gm"/>
	</target>

    <target name="retrieve" depends="clean, init-ivy, generateIvyFromFeatureXML, plugins" description="-> retrieve dependencies with ivy">
        <ivy:retrieve pattern="${pluginDir}/[artifact]_[revision].[ext]"/>
    </target>

    <target name="clean" depends="init" description="-> clean dropins and bundles directory">
        <delete dir="${pluginDir}"/>
    </target>

    <target name="clean-all" depends="clean" description="-> clean plugins directory and ivy cache">
        <ivy:cleancache/>
    </target>

    <target name="properties-update" depends="property, cloudpropertyOverwriteOnExist">
    </target>

</project>
